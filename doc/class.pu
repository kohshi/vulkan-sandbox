@startuml
set namespaceSeparator ::

class Application {
  - vk::Instance instance_
  - vk::PhysicalDevice physical_device_
  - vk::Device device_
  - vk::ComputeQueue compute_queue_
  - vk::CommandPool command_pool_
  - vk::DescriptorPool descriptor_pool_
  - vk::Stream stream_
  - std::array<vk::ComputeShader<PushConstants>, 2> compute_shaders_
  - vk::UniformBuffer uniform_buffer_
  - vk::StagingBuffer input_buffer_
  - vk::DeviceBuffer d_input_buffer_
  - vk::StagingBuffer output_buffer_
  - vk::DeviceBuffer d_output_buffer_
  + run()
}

class vk::Instance {
  - VkInstance instance_
}

class vk::PhysicalDevice {
  - VkPhysicalDevice physical_device_
  - VkPhysicalDeviceProperties phys_device_prop_
  - VkPhysicalDeviceMemoryProperties phys_memory_props_
}

class vk::Device {
  - VkDevice device_
  - bool synchronization2_supported_
  - uint32_t compute_queue_family_index_
}

struct vk::ComputeQueue {
  - VkQueue queue_
}

struct vk::CommandPool {
  - VkCommandPool command_pool_
  - VkDevice device_
}

struct vk::DescriptorPool {
  - VkDescriptorPool descriptor_pool_
  - VkDevice device_
}

struct vk::Stream {
  - VkDevice device_
  - VkQueue queue_
  - VkCommandPool command_pool_
  - VkCommandBuffer current_command_buf_
  - std::vector<VkCommandBuffer> submitted_command_bufs_
  - VkSemaphore timeline_semaphore_
  - uint64_t timeline_value_
  - const bool synchronize2_supported_
  - PFN_vkCmdPipelineBarrier2KHR vkCmdPipelineBarrier2KHR_
}

struct vk::ComputeShader<T> {
  - VkDevice device_
  - VkDescriptorPool descriptor_pool_
  - VkShaderModule shader_module_
  - VkDescriptorSetLayout descriptor_set_layout_
  - VkPipelineLayout pipeline_layout_
  - VkPipeline pipeline_
  - std::vector<VkDescriptorSet> descriptor_sets_
  - VkPushConstantRange push_range_
  - T push_constants_
}

struct vk::UniformBuffer {
  - VkDevice device_
  - const VkPhysicalDeviceMemoryProperties phys_mem_props_
  - VkBuffer buffer_
  - VkDeviceMemory memory_
  - void* mapped_
}

struct vk::StagingBuffer {
  - VkDevice device_
  - const VkPhysicalDeviceMemoryProperties phys_mem_props_
  - VkBuffer buffer_
  - VkDeviceMemory memory_
  - void* mapped_
}

struct vk::DeviceBuffer {
  - VkDevice device_
  - const VkPhysicalDeviceMemoryProperties phys_mem_props_
  - VkBuffer buffer_
  - VkDeviceMemory memory_
}

Application --> vk::Instance
Application --> vk::PhysicalDevice
Application --> vk::Device
Application --> vk::ComputeQueue
Application --> vk::CommandPool
Application --> vk::DescriptorPool
Application --> vk::Stream
Application --> vk::ComputeShader
Application --> vk::UniformBuffer
Application --> vk::StagingBuffer
Application --> vk::DeviceBuffer
vk::Device --> vk::PhysicalDevice
@enduml
